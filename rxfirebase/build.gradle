plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "com.github.dcendents.android-maven" version "1.5"
}
apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'


class Artifact{
    String version
    String groupId
    String id
    String siteUrl
    String gitUrl
    String name
}

def artifact = new Artifact();

artifact.with{
    version = "0.1.3"
    groupId = "com.cantrowitz"
    id = "rxfirebase"
    siteUrl = 'https://github.com/cantrowitz/RxFirebase'
    gitUrl = 'git@github.com:cantrowitz/RxFirebase.git'
    name = "RxFirebase"
}

group = artifact.groupId
version = artifact.version

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 2
        versionName artifact.version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.5.4'

    compile 'io.reactivex.rxjava2:rxjava:2.0.2'
    compile 'com.google.firebase:firebase-auth:10.0.1'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = this.hasProperty('BINTRAY_USER') ? BINTRAY_USER : "Not Supported"
    key = this.hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : "Not Supported"
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = artifact.name
        version {
            name = artifact.version
        }
        licenses = ['Apache-2.0']
        websiteUrl = artifact.siteUrl
        vcsUrl = artifact.gitUrl
        publish = false
    }
}


install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'

            name  artifact.name // pom.project.name must be same as bintray.pkg.name
            version artifact.version
            url artifact.siteUrl
            inceptionYear '2016' // HARDCODED

            licenses {
                license { // HARDCODED
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            scm {
                connection artifact.gitUrl
                url artifact.siteUrl
            }
        }
    }
}

